name: Quality Gates and Code Standards

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install quality tools
        run: |
          pip install black isort flake8 mypy pylint
          pip install -r requirements-dev.txt
          
      - name: Check code formatting
        run: |
          black --check --diff src/ tests/
          
      - name: Check import sorting
        run: |
          isort --check-only --diff src/ tests/
          
      - name: Run flake8
        run: |
          flake8 src/ tests/ --max-line-length=88 --extend-ignore=E203
          
      - name: Run mypy type checking
        run: |
          mypy src/ --strict
          
      - name: Run pylint
        run: |
          pylint src/ --rcfile=.pylintrc

  dependency-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Check for security vulnerabilities
        run: |
          pip install safety
          safety check --json --output safety-report.json
          
      - name: License compatibility check
        run: |
          pip install pip-licenses
          pip-licenses --format=json --output-file=license-report.json
          
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: "*-report.json"

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install docs dependencies
        run: |
          pip install sphinx sphinx-rtd-theme myst-parser
          
      - name: Build documentation
        run: |
          cd docs/
          make html
          
      - name: Check documentation coverage
        run: |
          sphinx-build -b coverage docs/ docs/_build/coverage/
          
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/_build/html/